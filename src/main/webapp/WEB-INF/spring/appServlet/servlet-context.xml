<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
	    http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<context:property-placeholder location="/WEB-INF/config/*.properties" /> 



	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <mvc:annotation-driven></mvc:annotation-driven> -->
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<!-- 컨트롤러에서 사용할 custom 클래스 정의 -->
			<beans:bean class="com.collabo.photography.vo.CustomHandleMethodArgumentResolver"/>
			<beans:bean class="com.collabo.photography.common.resolver.CustomMapArgumentResolver"/>		
		</mvc:argument-resolvers>
	</mvc:annotation-driven>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	 <mvc:resources mapping="/resources/**" location="/resources/" /> 
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".html" />
	</beans:bean>
	
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	
     <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <beans:bean id="loggerInterceptor" class="com.collabo.photography.common.logger.LoggerInterceptor"></beans:bean>
        </mvc:interceptor>
    	<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<beans:bean id="loginInterceptor" class="com.collabo.photography.common.interceptor.LoginInterceptor">
				<beans:property name="exclude">
					<beans:array>
						<beans:value>/rest/userRegist.do</beans:value>
						<beans:value>/rest/userLogin.do</beans:value>
						<beans:value>/rest/userLogout.do</beans:value>
						<beans:value>/_api.do</beans:value>						
					</beans:array>
				</beans:property>
			</beans:bean>
		</mvc:interceptor>
    </mvc:interceptors>
	
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basename" value="WEB-INF/messages/Messages"/>
        <beans:property name="defaultEncoding" value="UTF-8" />
        <beans:property name="cacheSeconds" value="180"/>
	</beans:bean>
	<beans:bean id="messageUtil" class="com.collabo.photography.common.util.MessageUtil">
		<beans:property name="reloadableResourceBundleMessageSource">
			<beans:ref bean="messageSource" />
		</beans:property> 
	</beans:bean>
	
	<!-- jwt secret key -->
	<beans:bean id="JwtUtill" class="com.collabo.photography.common.jwt.JwtUtil">
		<beans:property name="secretKey" value="${jwt.secretkey}"/>
	</beans:bean> 
	
	<context:component-scan base-package="com.collabo.photography" />

</beans:beans>
